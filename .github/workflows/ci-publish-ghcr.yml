name: CI / Test / Build & Publish (GHCR)

on:
  push:
    branches: [ 'replit-agent' ]

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install deps
        run: npm ci
      - name: Run tests
        run: npm test

  build-and-push:
    name: Build & push nginx Docker image to GHCR
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install deps & Build
        run: |
          npm ci
          npm run build
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile.nginx
          push: true
          platforms: linux/amd64
          tags: |
            ghcr.io/${{ github.repository_owner }}/rozmowa:latest
            ghcr.io/${{ github.repository_owner }}/rozmowa:${{ github.sha }}

      - name: Smoke test the pushed image
        env:
          IMAGE: ghcr.io/${{ github.repository_owner }}/rozmowa:latest
        run: |
          echo "Pulling image $IMAGE"
          docker pull "$IMAGE" || true
          echo "Starting container from $IMAGE"
          docker run -d --name rozmowa-ci -p 8080:80 "$IMAGE"

          echo "Waiting for HTTP 200 from container..."
          for i in $(seq 1 15); do
            if curl -sS --max-time 2 http://localhost:8080 | grep -q '<div id="root">'; then
              echo "Smoke test passed"
              break
            fi
            echo "Retry $i..."
            sleep 1
          done

          docker logs rozmowa-ci || true
          docker rm -f rozmowa-ci || true
