name: CI / Test / Build & Publish (GHCR)

on:
  push:
    branches: [ 'replit-agent', 'main' ]

permissions:
  contents: read
  packages: write
  pages: write
  id-token: write
  actions: read

# Convert the image name to lowercase
env:
  IMAGE_NAME: ${{ github.event.repository.name | lower }} # lowercase version

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install deps
        run: npm ci
      - name: Run tests
        run: npx vitest run src/__tests__/ci-workflows.test.ts

  build-and-push:
    name: Build & push Docker images to GHCR
    runs-on: ubuntu-latest
    needs: test
    if: github.repository_owner == 'Backerjr' && github.event_name == 'push'
    outputs:
      repo_owner_lower: ${{ steps.lowercase.outputs.repository_owner }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install deps & Build
        run: |
          npm ci
          npm run build
      
      - name: Convert repository owner to lowercase
        id: lowercase
        run: |
          echo "repository_owner=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Build and push nginx image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile.nginx
          push: true
          platforms: linux/amd64
          tags: |
            ghcr.io/${{ steps.lowercase.outputs.repository_owner }}/${{ env.IMAGE_NAME }}:nginx-latest
            ghcr.io/${{ steps.lowercase.outputs.repository_owner }}/${{ env.IMAGE_NAME }}:nginx-${{ github.sha }}

      - name: Build and push caddy image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile.caddy
          push: true
          platforms: linux/amd64
          tags: |
            ghcr.io/${{ steps.lowercase.outputs.repository_owner }}/${{ env.IMAGE_NAME }}:caddy-latest
            ghcr.io/${{ steps.lowercase.outputs.repository_owner }}/${{ env.IMAGE_NAME }}:caddy-${{ github.sha }}

  test-images:
    name: Pull and smoke-test pushed images (nginx & caddy)
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.repository_owner == 'Backerjr' && github.event_name == 'push'
    steps:
      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull and run nginx image
        env:
          IMAGE_NGINX: ghcr.io/${{ needs.build-and-push.outputs.repo_owner_lower }}/${{ env.IMAGE_NAME }}:nginx-latest
        run: |
          docker pull "$IMAGE_NGINX"
          docker run -d --name waapp-nginx-ci -p 8080:80 "$IMAGE_NGINX"
          # Use curl with retry for a more robust health check
          curl --retry 10 --retry-delay 1 --retry-connrefused http://localhost:8080
          docker logs waapp-nginx-ci || true
          docker rm -f waapp-nginx-ci || true

      - name: Pull and run caddy image
        env:
          IMAGE_CADDY: ghcr.io/${{ needs.build-and-push.outputs.repo_owner_lower }}/${{ env.IMAGE_NAME }}:caddy-latest
        run: |
          docker pull "$IMAGE_CADDY"
          docker run -d --name waapp-caddy-ci -p 8081:80 "$IMAGE_CADDY"
          curl --retry 10 --retry-delay 1 --retry-connrefused http://localhost:8081
          docker logs waapp-caddy-ci || true
          docker rm -f waapp-caddy-ci || true

  make-ghcr-public:
    name: Attempt to make GHCR package public
    runs-on: ubuntu-latest
    needs: build-and-push
    if: always() && github.repository_owner == 'Backerjr'
    steps:
      - name: Try to set package visibility
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const owner = context.repo.owner;
            const pkg = '${{ env.IMAGE_NAME }}';
            try {
              await github.rest.packages.setAccessibilityForPackageOwnedByUser({
                package_type: 'container',
                package_name: pkg,
                username: owner,
                visibility: 'public'
              });
              core.info(`Set user package visibility for '${pkg}' to public`);
            } catch (e) {
              core.warning(`Failed to set user package visibility: ${e.message}`);
              core.warning('This may be expected if the repository is owned by an organization.');
            }
