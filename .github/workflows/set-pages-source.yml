name: Set GitHub Pages Source

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/set-pages-source.yml'
      - 'dist/**'

permissions:
  contents: read
  pages: write
  id-token: write

# Ensure only one deployment happens at a time
concurrency:
 fix/yaml-indentation-deploy-pages
  group: "pages-${{ github.ref }}"

  group: "pages-config-${{ github.ref }}"
 replit-agent
  cancel-in-progress: true

jobs:
  set-pages-source:
 fix/yaml-indentation-deploy-pages
    runs-on: ubuntu-latest
    if: ${{ github.repository_owner == github.actor || github.event_name == 'workflow_dispatch' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Configure GitHub Pages
        uses: actions/github-script@v6

    name: Configure GitHub Pages source
    runs-on: ubuntu-latest
    timeout-minutes: 5
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
        if: fromJSON(steps.check-branch.outputs.result)
        id: check-branch
        uses: actions/github-script@v7
 replit-agent
        with:
          script: |
 codespace-orange-space-memory-5g5vqq9w695g2vwp6
            try {
              await github.rest.repos.getBranch({
                owner: context.repo.owner,
                repo: context.repo.repo,
                branch: 'gh-pages'
              });
              return true;
            } catch (error) {
              if (error.status === 404) {
                return false;
              }
              throw error;

            const response = await github.rest.repos.getPages({
              owner: context.repo.owner,
              repo: context.repo.repo
            }).catch(e => {
              if (e.status === 404) {
 fix/yaml-indentation-deploy-pages
                console.log('GitHub Pages not configured yet');

                console.log('‚ÑπÔ∏è GitHub Pages not configured yet');
 replit-agent
                return { data: null };
              }
              throw e;
            });

            if (!response.data || response.data.source.branch !== 'gh-pages') {
 fix/yaml-indentation-deploy-pages
              console.log('Setting GitHub Pages source to gh-pages branch');

              console.log('üîß Setting GitHub Pages source to gh-pages branch');
 replit-agent
              await github.rest.repos.createPagesSite({
                owner: context.repo.owner,
                repo: context.repo.repo,
                source: {
                  branch: 'gh-pages',
                  path: '/'
                }
              }).catch(e => {
                if (e.status === 409) {
 fix/yaml-indentation-deploy-pages
                  console.log('GitHub Pages already exists, updating source');

                  console.log('‚ÑπÔ∏è GitHub Pages already exists, updating source');
 replit-agent
                  return github.rest.repos.updateInformationAboutPagesSite({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    source: {
                      branch: 'gh-pages',
                      path: '/'
                    }
                  });
                }
                throw e;
              });
 fix/yaml-indentation-deploy-pages
              console.log('GitHub Pages source set to gh-pages branch');
            } else {
              console.log('GitHub Pages already configured correctly');

              console.log('‚úÖ GitHub Pages source set to gh-pages branch');
            } else {
              console.log('‚úÖ GitHub Pages already configured correctly');
 replit-agent
 replit-agent
            }

      - name: Configure Pages
        if: steps.check-branch.outputs.result == 'true'
        uses: actions/configure-pages@v4
        with:
          enablement: true
