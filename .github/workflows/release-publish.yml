name: Release / Build & Publish

on:
  release:
    types: [published]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    name: Build and push release images
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies & Build
        run: |
          npm ci
          npm run build

      - name: Verify build output
        run: |
          if [ ! -d "dist" ]; then
            echo "ERROR: dist directory not found"
            exit 1
          fi
          if [ ! -f "dist/index.html" ]; then
            echo "ERROR: dist/index.html not found"
            exit 1
          fi
          echo "✅ Build output verified successfully"
          ls -lah dist/

      - name: Convert repository owner to lowercase
        id: lowercase
        run: echo "repository_owner=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT != '' && secrets.GHCR_PAT || secrets.GITHUB_TOKEN }}

      - name: Extract version from tag
        id: version
        run: |
          # If triggered by release, use the tag name; otherwise use 'manual'
          if [ "${{ github.event_name }}" = "release" ]; then
            echo "version=${{ github.ref_name }}" >> $GITHUB_OUTPUT
          else
            echo "version=manual-${{ github.sha }}" >> $GITHUB_OUTPUT
          fi

      - name: Build and push nginx image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile.nginx
          push: true
          platforms: linux/amd64
          cache-from: type=gha,scope=nginx-release
          cache-to: type=gha,mode=max,scope=nginx-release
          tags: |
            ghcr.io/${{ steps.lowercase.outputs.repository_owner }}/rozmowa:nginx-latest
            ghcr.io/${{ steps.lowercase.outputs.repository_owner }}/rozmowa:nginx-${{ steps.version.outputs.version }}

      - name: Build and push caddy image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile.caddy
          push: true
          platforms: linux/amd64
          cache-from: type=gha,scope=caddy-release
          cache-to: type=gha,mode=max,scope=caddy-release
          tags: |
            ghcr.io/${{ steps.lowercase.outputs.repository_owner }}/rozmowa:caddy-latest
            ghcr.io/${{ steps.lowercase.outputs.repository_owner }}/rozmowa:caddy-${{ steps.version.outputs.version }}

      - name: Output image tags
        run: |
          echo "✅ Published Docker images:"
          echo "  Nginx: ghcr.io/${{ steps.lowercase.outputs.repository_owner }}/rozmowa:nginx-${{ steps.version.outputs.version }}"
          echo "  Caddy: ghcr.io/${{ steps.lowercase.outputs.repository_owner }}/rozmowa:caddy-${{ steps.version.outputs.version }}"
