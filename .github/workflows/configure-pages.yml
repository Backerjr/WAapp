name: Configure GitHub Pages

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - replit-agent
    paths:
      - '.github/workflows/set-pages-source.yml'

permissions:
  contents: read
  pages: write
  id-token: write

# Ensure only one configuration update happens at a time
concurrency:
  group: "pages-config-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  configure-pages:
    name: Configure GitHub Pages
    runs-on: ubuntu-latest
    timeout-minutes: 5
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Check if gh-pages branch exists
        id: check-branch
        uses: actions/github-script@v7
        with:
          script: |
            try {
              await github.rest.repos.getBranch({
                owner: context.repo.owner,
                repo: context.repo.repo,
                branch: 'gh-pages'
              });
              core.info('‚úÖ gh-pages branch exists');
              return true;
            } catch (error) {
              if (error.status === 404) {
                core.warning('‚ö†Ô∏è gh-pages branch does not exist yet');
                core.info('The branch will be created on first deployment');
                return false;
              }
              throw error;
            }

      - name: Configure GitHub Pages source
        if: steps.check-branch.outputs.result == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            try {
              const response = await github.rest.repos.getPages({
                owner: context.repo.owner,
                repo: context.repo.repo
              }).catch(e => {
                if (e.status === 404) {
                  core.info('‚ÑπÔ∏è GitHub Pages not configured yet');
                  return { data: null };
                }
                throw e;
              });

              if (!response.data || response.data.source.branch !== 'gh-pages') {
                core.info('üîß Setting GitHub Pages source to gh-pages branch');
                await github.rest.repos.createPagesSite({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  source: {
                    branch: 'gh-pages',
                    path: '/'
                  }
                }).catch(e => {
                  if (e.status === 409) {
                    core.info('‚ÑπÔ∏è GitHub Pages already exists, updating source');
                    return github.rest.repos.updateInformationAboutPagesSite({
                      owner: context.repo.owner,
                      repo: context.repo.repo,
                      source: {
                        branch: 'gh-pages',
                        path: '/'
                      }
                    });
                  }
                  throw e;
                });
                core.info('‚úÖ GitHub Pages source set to gh-pages branch');
              } else {
                core.info('‚úÖ GitHub Pages already configured correctly');
              }
            } catch (error) {
              core.error(`Failed to configure Pages: ${error.message}`);
              throw error;
            }

      - name: Configuration summary
        run: |
          echo "::notice title=Pages Configuration::GitHub Pages configuration check completed"
          echo "Pages should be configured to deploy from gh-pages branch"
